<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 配置连接池: -->
	<!-- 引入外部属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 主从数据库配置 -->
	<!-- c3p0配置 -->
	<bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" /> <!-- 驱动类 -->
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />       <!-- 空闲丢弃时间 -->
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" /> <!-- 耗尽再创建的连接数 -->
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" /> <!-- 间隔检查空闲连接秒数 -->
		<property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />
	</bean>
	<!-- 配置主数据源 -->
	<bean id="masterDataSource" parent="parentDataSource"
	destroy-method="close">
		<property name="jdbcUrl" value="${jdbc.url.master}" /> <!-- 连接字符串 -->
		<property name="user" value="${jdbc.user.master}" /> <!-- 用户名 -->
		<property name="password" value="${jdbc.password.master}" /> <!-- 密码 -->
	</bean>
	<!-- 配置从数据源 -->
	<bean id="slaveDataSource" parent="parentDataSource"
	destroy-method="close">
		<property name="jdbcUrl" value="${jdbc.url.slave}" /> <!-- 连接字符串 -->
		<property name="user" value="${jdbc.user.slave}" /> <!-- 用户名 -->
		<property name="password" value="${jdbc.password.slave}" /> <!-- 密码 -->
	</bean>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="bupt.sse.shop.aspect.DynamicdataSource">
		<property name="targetDataSources">
		<map key-type="java.lang.String">
			<entry key="slave" value-ref="slaveDataSource" />		
			<entry key="master" value-ref="masterDataSource" />
		</map>
		</property>
		<property name="defaultTargetDataSource" ref="masterDataSource" />
	</bean>
	<!-- 切换数据源 -->
	<bean id="dataSourceAdvice" class="bupt.sse.shop.aspect.DataSourceAdvice" />
		<aop:config>
		<aop:advisor pointcut="execution(* bupt..*.dao..*(..))"
		advice-ref="dataSourceAdvice" />
	</aop:config>
	
	
	
	<!-- 配置C3P0连接池: -->
	<!--
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />

		<property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>

		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxStatements" value="${jdbc.maxStatements}" />
	</bean>
  	-->
	<!-- Hibernate相关信息 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置Hibernata的其他属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- <prop key="hibernate.autoReconnect">true</prop> -->
				<prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider
				</prop>
<!-- 				<prop key="c3p0.min_size">5</prop>
				<prop key="c3p0.max_size">30</prop>
				<prop key="c3p0.time_out">1800</prop>
				<prop key="c3p0.max_statement">50</prop>
				<prop key="c3p0.acquire_increment">1</prop>
				<prop key="c3p0.idle_test_period">120</prop>
				<prop key="c3p0.validate">true</prop> -->
			</props>
		</property>


		<!-- 配置Hibernate映射文件 -->
		<property name="mappingResources">
			<list>
				<value>bupt/sse/shop/user/vo/User.hbm.xml</value>
				<value>bupt/sse/shop/category/vo/Category.hbm.xml</value>
				<value>bupt/sse/shop/product/vo/Product.hbm.xml</value>
				<value>bupt/sse/shop/categorysecond/vo/CategorySecond.hbm.xml
				</value>
				<value>bupt/sse/shop/order/vo/Order.hbm.xml</value>
				<value>bupt/sse/shop/order/vo/OrderItem.hbm.xml</value>
				<value>bupt/sse/shop/adminuser/vo/AdminUser.hbm.xml</value>
				<value>bupt/sse/shop/cart/vo/CartItem.hbm.xml</value>
				<value>bupt/sse/shop/store/vo/Store.hbm.xml</value>
				<value>bupt/sse/shop/conment/vo/Conment.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 事务管理 -->
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 切面类 -->
	<bean id="orderAspect" class="bupt.sse.shop.aspect.OrderAspect" />
	<bean id="userAspect" class="bupt.sse.shop.aspect.UserAspect" scope="prototype">
		<property name="categoryService" ref="categoryService"></property>
	</bean>

	<bean id="storeAspect" class="bupt.sse.shop.aspect.StoreAspect"/>

	
	<!-- 根据注解进行自动切面代理，不需要aop:config -->
	<!-- proxy-target-class 属性值决定bean是基于jdk的接口方式的还是基于类的代理(CGLIB)被创建。

		在ssh整合的项目中如果action继承了实现了别的接口的类,比如ActionSupport,ActionSupport实现了Action等接口，

		在用aop拦截action的时候如果不指定proxy-target-class="true"的话，Spring会默认按照jdk默认接口的方式去代理对象，

		由于Action没有父类实现的接口的方法，就会报java.lang.NoSuchMethodException:/> -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- strust2 拦截器bean -->
	<bean id="privilegeInterceptor" class="bupt.sse.shop.interceptor.PrivilegeInterceptor" scope="prototype"></bean>
	
	<!-- Action的配置 =========================== -->

	<!-- 首页访问的Action -->
	<bean id="indexAction" class="bupt.sse.shop.index.action.IndexAction"
		scope="prototype">
		<property name="categoryService" ref="categoryService"></property>
		<property name="productService" ref="productService"></property>
	</bean>

	<!-- 配置验证码的Action -->
	<bean id="checkImgAction" class="bupt.sse.shop.user.action.CheckImgAction"
		scope="prototype">

	</bean>

	<!-- 用户模块的Action -->
	<bean id="userAction" class="bupt.sse.shop.user.action.UserAction"
		scope="prototype">
		<!-- 注入Service -->
		<property name="userService" ref="userService" />
		<property name="storeService" ref="storeService"></property>
	</bean>

	<!-- 商品模块的Action -->
	<bean id="productAction" class="bupt.sse.shop.product.action.ProductAction"
		scope="prototype">
		<property name="productService" ref="productService" />
		<property name="conmentService" ref="conmentService"/>
	</bean>

	<!-- 购物车的Action -->
	<bean id="cartAction" class="bupt.sse.shop.cart.action.CartAction"
		scope="prototype">
		<property name="productService" ref="productService" />
		<property name="cartItemService" ref="cartItemService" />
	</bean>

	<!-- 店铺action -->
	<bean id="storeAction" class="bupt.sse.shop.store.action.StoreAction"
		scope="prototype">
		<property name="storeService" ref="storeService" />
		<property name="orderService" ref="orderService" />		
		<property name="orderItemService" ref="orderItemService" />
	</bean>
	<!-- 店铺商品管理action -->
	<bean id="productMngAction" class="bupt.sse.shop.product.mngaction.ProductMngAction"
		scope="prototype">
		<property name="productService" ref="productService"></property>
		<property name="categorySecondService" ref="categorySecondService"></property>
	</bean>

	<!--订单的Action -->
	<bean id="orderAction" class="bupt.sse.shop.order.action.OrderAction"
		scope="prototype">
		<property name="orderService" ref="orderService" />
		<property name="orderItemService" ref="orderItemService" />
		<property name="cartItemService" ref="cartItemService" />
		<property name="productService" ref="productService" />
		<property name="conmentService" ref="conmentService"/>
	</bean>
	<!-- 后台用户的action -->
	<bean id="adminUserAction" class="bupt.sse.shop.adminuser.action.AdminUserAction"
		scope="prototype">
		<property name="adminUserService" ref="adminUserService" />
	</bean>
	<!-- 后台用户管理action -->
	<bean id="userAdminAction" class="bupt.sse.shop.user.adminaction.UserAdminAction"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>
	<!-- 后台一级分类管理的action -->
	<bean id="adminCategoryAction" class="bupt.sse.shop.category.adminaction.AdminCategoryAction"
		scope="prototype">
		<property name="categoryService" ref="categoryService" />
	</bean>

	<!-- 后台订单管理的action -->
	<bean id="adminOrderAction" class="bupt.sse.shop.order.adminaction.AdminOrderAction"
		scope="prototype">
		<property name="orderService" ref="orderService" />
	</bean>

	<!-- 后台二级分类管理的action -->
	<bean id="adminCategorySecondAction"
		class="bupt.sse.shop.categorysecond.adminaction.AdminCategorySecondAction"
		scope="prototype">
		<property name="categorySecondService" ref="categorySecondService" />
		<property name="categoryService" ref="categoryService" />
	</bean>
	<!-- 后台商品管理的action -->
	<bean id="adminProductAction" class="bupt.sse.shop.product.adminaction.AdminProductAction"
		scope="prototype">
		<property name="productService" ref="productService"></property>
		<property name="categorySecondService" ref="categorySecondService"></property>
	</bean>


	<!-- 后台店铺管理的action -->
	<bean id="adminStoreAction" class="bupt.sse.shop.store.adminaction.AdminStoreAction"
		scope="prototype">
		<property name="storeService" ref="storeService" />
		<property name="userService" ref="userService" />
	</bean>

	<!-- Service的配置 =========================== -->
	<bean id="userService" class="bupt.sse.shop.user.service.UserService">
		<property name="userDao" ref="userDao" />
	</bean>
	<bean id="categoryService" class="bupt.sse.shop.category.service.CategoryService">
		<property name="categoryDao" ref="categoryDao"></property>
	</bean>
	<bean id="productService" class="bupt.sse.shop.product.service.ProductService">
		<property name="productDao" ref="productDao"></property>
	</bean>
	<bean id="orderService" class="bupt.sse.shop.order.service.OrderService">
		<property name="orderDao" ref="orderDao" />
	</bean>
	<bean id="orderItemService" class="bupt.sse.shop.order.service.OrderItemService">
		<property name="orderItemDao" ref="orderItemDao" />
	</bean>
	<bean id="adminUserService" class="bupt.sse.shop.adminuser.service.AdminUserService">
		<property name="adminUserDao" ref="adminUserDao" />
	</bean>
	<bean id="cartItemService" class="bupt.sse.shop.cart.service.CartItemService">
		<property name="cartItemDao" ref="cartItemDao"></property>
	</bean>
	<!-- 二级分类的service -->
	<bean id="categorySecondService"
		class="bupt.sse.shop.categorysecond.service.CategorySecondService">
		<property name="categorySecondDao" ref="categorySecondDao"></property>
	</bean>
	<!-- 店铺的service -->
	<bean id="storeService" class="bupt.sse.shop.store.service.StoreService">
		<property name="storeDao" ref="storeDao" />
	</bean>
	<!-- 评论的service -->
	<bean id="conmentService" class="bupt.sse.shop.conment.service.ConmentService">
		<property name="conmentDao" ref="conmentDao"/>	
	</bean>

	<!-- Dao的配置 =========================== -->
	<bean id="userDao" class="bupt.sse.shop.user.dao.UserDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="categoryDao" class="bupt.sse.shop.category.dao.CategoryDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="productDao" class="bupt.sse.shop.product.dao.ProductDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="orderDao" class="bupt.sse.shop.order.dao.OrderDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="orderItemDao" class="bupt.sse.shop.order.dao.OrderItemDao">
		<property name="sessionFactory" ref="sessionFactory" />		
	</bean>
	<bean id="cartItemDao" class="bupt.sse.shop.cart.dao.CartItemDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 后台登录的Dao -->
	<bean id="adminUserDao" class="bupt.sse.shop.adminuser.dao.AdminUserDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 二级分类的Dao -->
	<bean id="categorySecondDao" class="bupt.sse.shop.categorysecond.dao.CategorySecondDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 店铺的Dao -->
	<bean id="storeDao" class="bupt.sse.shop.store.dao.StoreDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 评论的Dao -->
	<bean id="conmentDao" class="bupt.sse.shop.conment.dao.ConmentDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
</beans>
